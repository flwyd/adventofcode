#!/usr/bin/env elixir
# Copyright 2022 Google LLC
#
# Use of this source code is governed by an MIT-style
# license that can be found in the LICENSE file or at
# https://opensource.org/licenses/MIT.
#
# https://adventofcode.com/2022/day/<%= day_num %>

defmodule Day<%= day_num %> do
  def part1(input) do
    :todo
  end

  def part2(input) do
    :todo
  end
end

if !Enum.empty?(System.argv()) do
  success = Enum.all?(for f <- System.argv() do
    if function_exported?(Runner, :__info__, 1) do
      Runner.run(Day<%= day_num %>, f)
    else
      input = File.stream!(f) |> Stream.map(&Striing.trim_trailing(&1, "\n")) |> Enum.to_list()
      IO.puts("#{f} part1: #{Day<%= day_num %>.part1(input)}")
      IO.puts("#{f} part2: #{Day<%= day_num %>.part2(input)}")
      true
    end
  end)
  exit({:shutdown, if(success, do: 0, else: 1)})
end
